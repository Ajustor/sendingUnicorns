stages:
  - setup
  - build

# Variables globales
variables:
  RUST_VERSION: "latest"
  TAURI_VERSION: "latest"
  NODE_CACHE_PATH: "node_modules"
  CARGO_BIN_PATH: "~/.cargo/bin"

setup:
  stage: setup
  image: rust:${RUST_VERSION}
  cache:
    key: tauri-cli-cache
    paths:
      - ${CARGO_BIN_PATH}/tauri
      - ${NODE_CACHE_PATH}
  script:
    - rustup update
    - cargo install tauri-cli
    - curl -fsSL https://bun.sh/install | bash
    - source ~/.bashrc
    - bun i

linux:
  stage: build
  image: rust:${RUST_VERSION}
  cache:
    key: tauri-cli-cache
    paths:
      - ${CARGO_BIN_PATH}/tauri
      - ${NODE_CACHE_PATH}
  script:
    - apt update
    - apt install libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
    - source ~/.cargo/env
    - rustup target add x86_64-unknown-linux-gnu
    - bun tauri build --target x86_64-unknown-linux-gnu
  artifacts:
    paths:
      - target/release/bundle/

windows:
  stage: build
  image: rust:${RUST_VERSION}
  cache:
    key: tauri-cli-cache
    paths:
      - ${CARGO_BIN_PATH}/tauri
      - ${NODE_CACHE_PATH}
  script:
    - apt update
    - apt install libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
    - source ~/.cargo/env
    - rustup target add x86_64-pc-windows-gnu
    - bun tauri build --target x86_64-pc-windows-gnu
  artifacts:
    paths:
      - target/release/bundle/

mac:
  stage: build
  image: rust:${RUST_VERSION}
  cache:
    key: tauri-cli-cache
    paths:
      - ${CARGO_BIN_PATH}/tauri
      - ${NODE_CACHE_PATH}
  script:
    - apt update
    - apt install libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
    - source ~/.cargo/env
    - rustup target add x86_64-apple-darwin
    - bun tauri build --target x86_64-apple-darwin
  artifacts:
    paths:
      - target/release/bundle/
